{"version":3,"sources":["types/Filter.ts","components/TodoForm/TodoForm.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/ErrorMessage/ErrorMessage.tsx","utils/fetchClient.ts","api/todos.ts","App.tsx","index.tsx"],"names":["Filter","TodoForm","todos","onError","onTodoAdd","isActive","onTodoToggle","useState","todoTitle","setTodoTitle","isSubmitting","setIsSubmitting","titleField","useRef","useEffect","current","focus","length","trimedTitle","trim","handleSubmit","event","a","preventDefault","className","aria-label","type","cn","active","data-cy","onClick","onSubmit","placeholder","ref","disabled","value","onChange","target","TodoItem","todo","isLoading","onTodoDelete","onTodoUpdate","isEditing","setIsEditing","title","updatedTitle","setUpdatedTitle","updatedTitleField","trimmedUpdatedTitle","Error","completed","onDoubleClick","checked","onBlur","onKeyUp","key","TodoList","modifyingTodoIds","deleteTodoHandler","tempTodo","TransitionGroup","map","CSSTransition","timeout","classNames","includes","id","TodoFilter","onClearButtonDelete","filterBy","onFilterClick","filterLinks","Object","values","filter","href","toLowerCase","selected","activeTodosCount","isCompletedTodos","some","hidden","ErrorMessage","errorMessage","setErrorMessage","errorTimerId","clearTimeout","window","setTimeout","BASE_URL","wait","delay","Promise","resolve","request","url","method","data","options","body","JSON","stringify","headers","all","fetch","response","ok","json","reject","client","USER_ID","createTodo","userId","deleteTodo","updateTodos","App","setTodos","setTempTodo","setModifyingTodoIds","All","setFilterBy","loadTodos","todosData","filteredTodos","Active","Completed","addTodoHandler","newTodo","prevTodo","prevId","todoId","deleteCompletedTodos","allCompleted","allSettled","updateTodoHandler","updatedTodo","currTodo","prev","toggleAll","isAllCompleted","every","todosToUpdate","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.c5074f19.chunk.js","sourcesContent":["export enum Filter {\n  All = 'All',\n  Active = 'Active',\n  Completed = 'Completed',\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onError: (message: string) => void;\n  onTodoAdd: (title: string) => Promise<void>;\n  isActive: boolean;\n  onTodoToggle: () => void;\n};\n\nexport const TodoForm: React.FC<Props> = ({\n  todos,\n  onError,\n  onTodoAdd,\n  isActive,\n  onTodoToggle,\n}) => {\n  const [todoTitle, setTodoTitle] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const titleField = useRef<HTMLInputElement | null>(null);\n\n  useEffect(() => {\n    if (titleField.current) {\n      titleField.current.focus();\n    }\n  }, [isSubmitting, todos.length]);\n\n  const trimedTitle = todoTitle.trim();\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    setIsSubmitting(true);\n    event.preventDefault();\n\n    if (!trimedTitle) {\n      setTodoTitle('');\n      onError('Title should not be empty');\n      setIsSubmitting(false);\n\n      return;\n    }\n\n    try {\n      await onTodoAdd(trimedTitle);\n      setTodoTitle('');\n      setIsSubmitting(false);\n    } catch (error) {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <header className=\"todoapp__header\">\n      {todos.length > 0 && (\n        <button\n          aria-label=\"toggle button\"\n          type=\"button\"\n          className={cn('todoapp__toggle-all', { active: isActive })}\n          data-cy=\"ToggleAllButton\"\n          onClick={onTodoToggle}\n        />\n      )}\n\n      <form onSubmit={handleSubmit}>\n        <input\n          data-cy=\"NewTodoField\"\n          type=\"text\"\n          className=\"todoapp__new-todo\"\n          placeholder=\"What needs to be done?\"\n          ref={titleField}\n          disabled={isSubmitting}\n          value={todoTitle}\n          onChange={(event) => {\n            setTodoTitle(event.target.value);\n          }}\n        />\n      </form>\n    </header>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useEffect, useRef, useState } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  isLoading: boolean;\n  onTodoDelete?: () => Promise<void>;\n  onTodoUpdate?: (todo: Todo) => Promise<void>;\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  isLoading,\n  onTodoDelete,\n  onTodoUpdate,\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [updatedTitle, setUpdatedTitle] = useState(todo.title);\n\n  const updatedTitleField = useRef<HTMLInputElement | null>(null);\n\n  useEffect(() => {\n    if (isEditing && updatedTitleField.current) {\n      updatedTitleField.current.focus();\n    }\n  }, [isEditing]);\n\n  const handleToggle = () => {\n    onTodoUpdate?.({\n      ...todo,\n      completed: !todo.completed,\n    });\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const trimmedUpdatedTitle = updatedTitle.trim();\n\n    if (!trimmedUpdatedTitle) {\n      onTodoDelete?.();\n\n      return;\n    }\n\n    if (todo.title === trimmedUpdatedTitle) {\n      setIsEditing(false);\n\n      return;\n    }\n\n    try {\n      await onTodoUpdate?.({\n        ...todo,\n        title: trimmedUpdatedTitle,\n      });\n\n      setIsEditing(false);\n    } catch (error) {\n      if (updatedTitleField.current) {\n        updatedTitleField.current.focus();\n      }\n\n      throw new Error('Some error occured');\n    }\n  };\n\n  const handleEscapeClick = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Escape') {\n      setIsEditing(false);\n      setUpdatedTitle(todo.title);\n    }\n  };\n\n  return (\n    <div\n      data-cy=\"Todo\"\n      className={cn('todo', { completed: todo.completed })}\n      onDoubleClick={() => setIsEditing(true)}\n    >\n      <label className=\"todo__status-label\">\n        <input\n          data-cy=\"TodoStatus\"\n          type=\"checkbox\"\n          className=\"todo__status\"\n          checked={todo.completed}\n          onChange={handleToggle}\n        />\n      </label>\n\n      {!isEditing ? (\n        <>\n          <span data-cy=\"TodoTitle\" className=\"todo__title\">\n            {todo.title}\n          </span>\n\n          <button\n            type=\"button\"\n            className=\"todo__remove\"\n            data-cy=\"TodoDelete\"\n            onClick={onTodoDelete}\n          >\n            ×\n          </button>\n        </>\n      ) : (\n        <form onSubmit={handleSubmit}>\n          <input\n            onBlur={handleSubmit}\n            data-cy=\"TodoTitleField\"\n            type=\"text\"\n            className=\"todo__title-field\"\n            placeholder=\"Empty todo will be deleted\"\n            ref={updatedTitleField}\n            value={updatedTitle}\n            onChange={(event) => {\n              setUpdatedTitle(event.target.value);\n            }}\n            onKeyUp={handleEscapeClick}\n          />\n        </form>\n      )}\n\n      <div\n        data-cy=\"TodoLoader\"\n        className={cn('modal overlay', {\n          'is-active': isLoading,\n        })}\n      >\n        <div className=\"modal-background has-background-white-ter\" />\n        <div className=\"loader\" />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[];\n  deleteTodoHandler: (id: number) => Promise<void>;\n  modifyingTodoIds: number[];\n  tempTodo: Todo | null;\n  onTodoUpdate: (todo: Todo) => Promise<void>;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  modifyingTodoIds,\n  deleteTodoHandler,\n  tempTodo,\n  onTodoUpdate,\n}) => (\n  <section className=\"todoapp__main\" data-cy=\"TodoList\">\n    <TransitionGroup>\n      {todos.map((todo) => (\n        <CSSTransition\n          key={todo.id}\n          timeout={300}\n          classNames=\"item\"\n        >\n          <TodoItem\n            todo={todo}\n            key={todo.id}\n            isLoading={modifyingTodoIds.includes(todo.id)}\n            onTodoDelete={() => deleteTodoHandler(todo.id)}\n            onTodoUpdate={onTodoUpdate}\n          />\n        </CSSTransition>\n      ))}\n      {tempTodo && (\n        <CSSTransition\n          key={0}\n          timeout={300}\n          classNames=\"temp-item\"\n        >\n          <TodoItem todo={tempTodo} isLoading />\n        </CSSTransition>\n      )}\n    </TransitionGroup>\n  </section>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Filter } from '../../types/Filter';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onClearButtonDelete: () => Promise<void>;\n  filterBy: Filter;\n  onFilterClick: (value: Filter) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  todos,\n  onClearButtonDelete,\n  filterBy,\n  onFilterClick,\n}) => {\n  const filterLinks = Object.values(Filter).map((filter) => (\n    <a\n      key={filter}\n      href={`#/${filter.toLowerCase()}`}\n      className={cn('filter__link', { selected: filter === filterBy })}\n      data-cy={`FilterLink${filter}`}\n      onClick={() => onFilterClick(filter)}\n    >\n      {filter}\n    </a>\n  ));\n\n  const activeTodosCount = todos.filter((todo) => !todo.completed).length;\n  const isCompletedTodos = todos.some((todo) => todo.completed);\n\n  return (\n    <footer className=\"todoapp__footer\" data-cy=\"Footer\">\n      <span className=\"todo-count\" data-cy=\"TodosCounter\">\n        {activeTodosCount === 1 ? (\n          `${activeTodosCount} item left`\n        ) : (\n          `${activeTodosCount} items left`\n        )}\n      </span>\n\n      <nav className=\"filter\" data-cy=\"Filter\">\n        {filterLinks}\n      </nav>\n\n      <button\n        type=\"button\"\n        className={cn('todoapp__clear-completed', {\n          hidden: !isCompletedTodos,\n        })}\n        data-cy=\"ClearCompletedButton\"\n        onClick={onClearButtonDelete}\n        disabled={!isCompletedTodos}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n","import React, { useEffect, useRef } from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  errorMessage: string;\n  setErrorMessage: (value: string) => void;\n};\n\nexport const ErrorMessage: React.FC<Props> = ({\n  errorMessage,\n  setErrorMessage,\n}) => {\n  const errorTimerId = useRef(0);\n\n  useEffect(() => {\n    if (errorTimerId.current) {\n      clearTimeout(errorTimerId.current);\n    }\n\n    errorTimerId.current = window.setTimeout(() => {\n      setErrorMessage('');\n    }, 3000);\n  }, [setErrorMessage, errorMessage]);\n\n  return (\n    <div\n      data-cy=\"ErrorNotification\"\n      className={cn(\n        'notification',\n        'is-danger',\n        'is-light',\n        'has-text-weight-normal',\n        {\n          hidden: !errorMessage,\n        },\n      )}\n    >\n      <button\n        aria-label=\"HideErrorButton\"\n        data-cy=\"HideErrorButton\"\n        type=\"button\"\n        className=\"delete\"\n        onClick={() => setErrorMessage('')}\n      />\n      {errorMessage}\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\n// returns a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nasync function request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // DON'T change the delay it is required for tests\n  const [response] = await Promise.all([\n    fetch(BASE_URL + url, options),\n    wait(100),\n  ]);\n\n  return response.ok\n    ? response.json()\n    : Promise.reject();\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const USER_ID = 11827;\n\nexport const getTodos = () => {\n  return client.get<Todo[]>(`/todos?userId=${USER_ID}`);\n};\n\nexport const createTodo = (title: string) => {\n  return client.post<Todo>('/todos', {\n    userId: USER_ID,\n    title,\n    completed: false,\n  });\n};\n\nexport const deleteTodo = (id: number) => {\n  return client.delete(`/todos/${id}`);\n};\n\nexport const updateTodos = (todo: Todo) => {\n  return client.patch<Todo>(`/todos/${todo.id}`, {\n    userId: todo.userId,\n    title: todo.title,\n    completed: todo.completed,\n  });\n};\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from './types/Todo';\n\nimport { TodoForm } from './components/TodoForm';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Filter } from './types/Filter';\nimport { ErrorMessage } from './components/ErrorMessage';\nimport {\n  USER_ID,\n  createTodo,\n  deleteTodo,\n  getTodos,\n  updateTodos,\n} from './api/todos';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [tempTodo, setTempTodo] = useState<Todo | null>(null);\n  const [modifyingTodoIds, setModifyingTodoIds] = useState<Array<number>>([]);\n  const [filterBy, setFilterBy] = useState<Filter>(Filter.All);\n\n  const loadTodos = async () => {\n    try {\n      const todosData = await getTodos();\n\n      setTodos(todosData);\n    } catch (error) {\n      setErrorMessage('Unable to load todos');\n      throw error;\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const filteredTodos = todos.filter((todo) => {\n    switch (filterBy) {\n      case Filter.Active:\n        return !todo.completed;\n\n      case Filter.Completed:\n        return todo.completed;\n\n      default:\n        return Filter.All;\n    }\n  });\n\n  const addTodoHandler = async (title: string) => {\n    setErrorMessage('');\n\n    setTempTodo({\n      id: 0,\n      userId: USER_ID,\n      title,\n      completed: false,\n    });\n\n    try {\n      const newTodo = await createTodo(title);\n\n      setTodos((prevTodo) => [...prevTodo, newTodo]);\n    } catch (error) {\n      setErrorMessage('Unable to add a todo');\n      throw error;\n    } finally {\n      setTempTodo(null);\n    }\n  };\n\n  const deleteTodoHandler = async (id: number) => {\n    setErrorMessage('');\n\n    setModifyingTodoIds((prevId) => [...prevId, id]);\n\n    try {\n      await deleteTodo(id);\n\n      setTodos((prevTodo) => prevTodo.filter((todo) => todo.id !== id));\n    } catch (error) {\n      setErrorMessage('Unable to delete a todo');\n      throw error;\n    } finally {\n      setModifyingTodoIds((prevId) => prevId.filter((todoId) => todoId !== id));\n    }\n  };\n\n  const deleteCompletedTodos = async () => {\n    const allCompleted = todos.filter((todo) => todo.completed);\n\n    await Promise.allSettled(\n      allCompleted.map((todo) => deleteTodoHandler(todo.id)),\n    );\n  };\n\n  const updateTodoHandler = async (todo: Todo) => {\n    setModifyingTodoIds((prevTodo) => [...prevTodo, todo.id]);\n\n    try {\n      const updatedTodo = await updateTodos(todo);\n\n      setTodos((currTodo) => currTodo\n        .map((prevTodo) => (prevTodo.id === updatedTodo.id ? updatedTodo : prevTodo)));\n    } catch (error) {\n      setErrorMessage('Unable to update todo');\n      throw error;\n    } finally {\n      setModifyingTodoIds((prev) => prev.filter((id) => id !== todo.id));\n    }\n  };\n\n  const toggleAll = async () => {\n    const isAllCompleted = todos.every((todo) => todo.completed);\n\n    const todosToUpdate = todos\n      .filter((todo) => (isAllCompleted ? todo.completed : !todo.completed));\n\n    await Promise.all(\n      todosToUpdate.map((todo) => updateTodoHandler({\n        ...todo,\n        completed: !isAllCompleted,\n      })),\n    );\n  };\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n      <div className=\"todoapp__content\">\n        <TodoForm\n          todos={todos}\n          onError={setErrorMessage}\n          onTodoAdd={addTodoHandler}\n          isActive={todos.every((todo) => todo.completed)}\n          onTodoToggle={toggleAll}\n        />\n\n        {todos.length > 0 && (\n          <>\n            <TodoList\n              todos={filteredTodos}\n              deleteTodoHandler={deleteTodoHandler}\n              tempTodo={tempTodo}\n              modifyingTodoIds={modifyingTodoIds}\n              onTodoUpdate={updateTodoHandler}\n            />\n\n            <TodoFilter\n              todos={todos}\n              onClearButtonDelete={deleteCompletedTodos}\n              filterBy={filterBy}\n              onFilterClick={setFilterBy}\n            />\n          </>\n        )}\n      </div>\n      {errorMessage && (\n        <ErrorMessage\n          errorMessage={errorMessage}\n          setErrorMessage={setErrorMessage}\n        />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\n// import './styles/transition.scss';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<App />);\n"],"sourceRoot":""}